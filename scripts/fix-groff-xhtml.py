#!/usr/bin/env python3
#
# Format XHTML generated by groff -Thtml (via tidy) for websites
#
# Usage: groff -Thtml -P-l something.man | tidy -asxml ... | python3 fix-groff-xhtml.py OUTPUT-FILE
#
# (C) Copyright 2025 Dave Beckett
#

import sys
import re
import os
from datetime import date

# Module-level constants for titles
RAPTOR_TITLE = "Raptor RDF Parser Toolkit"
REDLAND_TITLE = "Redland RDF Application Framework"
RASQAL_TITLE = "Rasqal RDF Query Library"

REPLACEMENTS = [
    ("<title>libraptor</title>", f"<title>{RAPTOR_TITLE} - Raptor API</title>"),
    ('<h1 align="center">libraptor</h1>', f"<h1>{RAPTOR_TITLE} - Raptor API</h1>"),
    (
        "<title>rapper</title>",
        f"<title>{RAPTOR_TITLE} - Raptor RDF parser utility</title>",
    ),
    (
        '<h1 align="center">rapper</h1>',
        f"<h1>{RAPTOR_TITLE} - Raptor RDF parser utility</h1>",
    ),
    (
        "<title>rdfproc</title>",
        f"<title>{REDLAND_TITLE} - Redland RDF processor utility</title>",
    ),
    (
        '<h1 align="center">rdfproc</h1>',
        f"<h1>{REDLAND_TITLE} - Redland RDF processor utility</h1>",
    ),
    ("<title>librasqal</title>", f"<title>{RASQAL_TITLE} - Rasqal API</title>"),
    ('<h1 align="center">librasqal</h1>', f"<h1>{RASQAL_TITLE} - Rasqal API</h1>"),
    (
        "<title>roqet</title>",
        f"<title>{RASQAL_TITLE} - Rasqal RDF query utility</title>",
    ),
    (
        '<h1 align="center">roqet</h1>',
        f"<h1>{RASQAL_TITLE} - Rasqal RDF query utility</h1>",
    ),
]


def replace_spaces_in_attr(match):
    """
    A replacer function for re.sub to replace spaces in attribute values.
    """
    attr = match.group(1)
    val = match.group(2)
    new_val = val.replace(" ", "_")
    return f'{attr}="{new_val}"'


def main():
    """
    Main function to process XHTML from stdin and write to a file.
    """
    progname = os.path.basename(sys.argv[0])

    if len(sys.argv) < 2:
        print(f"USAGE: {progname} OUTPUT-FILE", file=sys.stderr)
        sys.exit(1)

    output_file = sys.argv[1]

    try:
        with open(output_file, "w") as out_f:
            for line in sys.stdin:
                # Apply all title and h1 replacements
                for old, new in REPLACEMENTS:
                    line = line.replace(old, new)

                # Skip link and meta tags
                if re.match(r"^<link|meta", line, re.IGNORECASE):
                    continue

                # Simplify body tag
                line = re.sub(r"^<body[^>]*>", "<body>", line)

                # Remove cols attribute
                line = re.sub(r' cols="\d+" ', " ", line)

                # Replace spaces in name/id attributes
                line = re.sub(r'(name|id)="([^"]+)"', replace_spaces_in_attr, line)

                # Linkify author
                line = re.sub(
                    r"(Dave Beckett|Institute for Learning and Research Technology \\.ILRT\\.|University of Bristol) (?:- |)(http://[^<]+)",
                    r'<a href="\\2">\\1</a>',
                    line,
                )

                # Add copyright before </body>.
                if "</body>" in line:
                    year = date.today().year
                    copyright_notice = f"""
<p>Copyright 2002-{year} <a href="https://www.dajobe.org/">Dave Beckett</a><br />2002-2005 <a href="https://www.bristol.ac.uk/">University of Bristol</a></p>
"""
                    out_f.write(copyright_notice)

                out_f.write(line)

    except IOError as e:
        print(f"{progname}: Cannot create {output_file} - {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
