@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix dawgt:   <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix t:      <http://ns.librdf.org/2009/test-manifest#> .

<>  rdf:type mf:Manifest ;
    rdfs:comment "Value Testing Negative Tests (should fail when run as queries)" ;
    mf:entries
    ([  rdf:type t:XFailTest ;
	mf:name    "typePromotion-decimal-decimal-pass" ;
        rdfs:comment
            """Test: product of type promotion within the xsd:decimal type tree. Expected to fail due to engine type promotion bug.""" ;
        mf:action
            [ qt:data   <typePromotion-0.n3> ;
              qt:query  <typePromotion-decimal-decimal-pass.rq> ] ;
        mf:result  <typePromotion-decimal-decimal-pass-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "boolean-false-canonical" ;
        rdfs:comment
            """Test: Lexical form of FALSE. Expected to fail due to engine boolean handling bug.""" ;
        mf:action
            [ qt:data   <boolean-0.n3> ;
              qt:query  <boolean-false-canonical.rq> ] ;
        mf:result  <boolean-false-canonical-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "boolean-true-canonical" ;
        rdfs:comment
            """Test: Lexical form of TRUE. Expected to fail due to engine boolean handling bug.""" ;
        mf:action
            [ qt:data   <boolean-0.n3> ;
              qt:query  <boolean-true-canonical.rq> ] ;
        mf:result  <boolean-true-canonical-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "boolean-EBV-canonical" ;
        rdfs:comment
            """Test: Lexical form of EBV. Expected to fail due to engine boolean handling bug.""" ;
        mf:action
            [ qt:data   <boolean-0.n3> ;
              qt:query  <boolean-EBV-canonical.rq> ] ;
        mf:result  <boolean-EBV-canonical-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "extendedType-ne-fail" ;
        rdfs:comment
            """Opaque types can not be tested for != . Expected to fail due to engine extended type comparison bug. 
             The test compares extended types 'loc:latitude' and 'loc:ECEF_X' which are incompatible for comparison.
             The engine should detect this type incompatibility and fail with a type error, but currently fails
             silently or returns incorrect results. This violates SPARQL semantics where extended types with
             different datatypes cannot be compared.""" ;
        rdfs:seeAlso
            <http://www.w3.org/2005/04/26-dawg-irc#T15-21-30> ;
        mf:action
            [ qt:data   <extendedType-0.n3> ;
              qt:query  <extendedType-ne-fail.rq> ] ;
        mf:result  <extendedType-ne-fail-result.n3> ;
        dawgt:approval dawgt:Approved ;
	dawgt:approvedBy <http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JulSep/0175>
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "extendedType-literal-ne" ;
        rdfs:comment
            """Test FILTER negative match on extended type. Expected to fail due to engine extended type comparison bug.
             The test compares a variable bound to 'loc:latitude' type with a literal of type 'loc:ECEF_X'.
             According to SPARQL semantics, these extended types are incompatible and should cause a type error
             during filter evaluation. The engine currently fails to detect this incompatibility and either
             fails silently or returns incorrect boolean results instead of raising a proper type error.""" ;
        mf:action
            [ qt:data   <extendedType-0.n3> ;
              qt:query  <extendedType-literal-ne.rq> ] ;
        mf:result  <extendedType-literal-ne-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

     [  rdf:type t:XFailTest ;
	mf:name    "typePromotion-decimal-decimal-fail" ;
        rdfs:comment
            """Test: product of type promotion within the xsd:decimal type tree. Expected to fail due to engine type promotion bug.
             The test verifies that adding 'xsd:unsignedByte' and 'xsd:unsignedShort' should result in 'xsd:unsignedShort'
             according to XML Schema type promotion rules. The engine currently fails to properly promote these types
             and returns 'UNKNOWN' type instead of the expected 'xsd:unsignedShort'. This violates XML Schema
             numeric type promotion semantics where unsignedByte + unsignedShort = unsignedShort.""" ;
        mf:action
            [ qt:data   <typePromotion-0.n3> ;
              qt:query  <typePromotion-decimal-decimal-fail.rq> ] ;
        mf:result  <typePromotion-decimal-decimal-fail-result.n3> ;
        dawgt:approval dawgt:NotApproved
      ]

    # End of tests
   ). 